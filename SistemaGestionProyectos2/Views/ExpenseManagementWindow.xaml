<Window x:Class="SistemaGestionProyectos2.Views.ExpenseManagementWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        Title="Portal de Proveedores - IMA Mecatrónica" 
        Height="800" 
        Width="1400"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        WindowStyle="None"
        ResizeMode="NoResize"
        MinHeight="700"
        MinWidth="1200">

	<Window.Resources>
		<!-- Estilo para botones modernos -->
		<Style x:Key="ModernButton" TargetType="Button">
			<Setter Property="Background" Value="#2196F3"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Padding" Value="15,8"/>
			<Setter Property="FontWeight" Value="SemiBold"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="Height" Value="38"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="border" 
								Background="{TemplateBinding Background}"
								CornerRadius="5"
								Padding="{TemplateBinding Padding}">
							<ContentPresenter HorizontalAlignment="Center" 
											VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="Background" Value="#1976D2"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter TargetName="border" Property="Background" Value="#0D47A1"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Estilo para botón de acción secundaria -->
		<Style x:Key="SecondaryButton" TargetType="Button">
			<Setter Property="Background" Value="#FFF"/>
			<Setter Property="Foreground" Value="#333"/>
			<Setter Property="BorderBrush" Value="#DDD"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Padding" Value="12,6"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="Height" Value="35"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="border" 
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								CornerRadius="4"
								Padding="{TemplateBinding Padding}">
							<ContentPresenter HorizontalAlignment="Center" 
											VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="Background" Value="#F5F5F5"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Estilo para botón de peligro (eliminar) -->
		<Style x:Key="DangerButton" TargetType="Button">
			<Setter Property="Background" Value="#F44336"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Padding" Value="12,6"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="Height" Value="35"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="border" 
								Background="{TemplateBinding Background}"
								CornerRadius="4"
								Padding="{TemplateBinding Padding}">
							<ContentPresenter HorizontalAlignment="Center" 
											VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="Background" Value="#D32F2F"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Estilo para botón de éxito (pagar) -->
		<Style x:Key="SuccessButton" TargetType="Button">
			<Setter Property="Background" Value="#4CAF50"/>
			<Setter Property="Foreground" Value="White"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Padding" Value="12,6"/>
			<Setter Property="Cursor" Value="Hand"/>
			<Setter Property="Height" Value="35"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Border x:Name="border" 
								Background="{TemplateBinding Background}"
								CornerRadius="4"
								Padding="{TemplateBinding Padding}">
							<ContentPresenter HorizontalAlignment="Center" 
											VerticalAlignment="Center"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="border" Property="Background" Value="#388E3C"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!-- Estilo para fila nueva en edición -->
		<Style x:Key="NewRowStyle" TargetType="DataGridRow">
			<Style.Triggers>
				<DataTrigger Binding="{Binding IsNew}" Value="True">
					<Setter Property="Background" Value="#E8F5E9"/>
					<Setter Property="BorderBrush" Value="#4CAF50"/>
					<Setter Property="BorderThickness" Value="2"/>
				</DataTrigger>
				<Trigger Property="IsMouseOver" Value="True">
					<Setter Property="Background" Value="#E3F2FD"/>
				</Trigger>
				<Trigger Property="IsSelected" Value="True">
					<Setter Property="Background" Value="#BBDEFB"/>
				</Trigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>

	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>

		<!-- Header con gradiente -->
		<Border Grid.Row="0">
			<Border.Background>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Color="#1976D2" Offset="0"/>
					<GradientStop Color="#1565C0" Offset="1"/>
				</LinearGradientBrush>
			</Border.Background>

			<Grid Height="70">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>

				<!-- Logo y título -->
				<StackPanel Grid.Column="0" 
						   Orientation="Horizontal" 
						   VerticalAlignment="Center"
						   Margin="25,0">
					<TextBlock Text="💰" 
							 Foreground="White"
							 FontSize="28"
							 Margin="0,0,15,0"
							 VerticalAlignment="Center"/>
					<StackPanel VerticalAlignment="Center">
						<TextBlock Text="PORTAL DE PROVEEDORES" 
								 Foreground="White"
								 FontSize="22"
								 FontWeight="Bold"/>
						<TextBlock Text="Gestión de Gastos y Pagos"
								 Foreground="#E3F2FD"
								 FontSize="12"
								 Margin="0,2,0,0"/>
					</StackPanel>
				</StackPanel>

				<!-- Controles de ventana -->
				<StackPanel Grid.Column="2" 
		   Orientation="Horizontal"
		   VerticalAlignment="Center"
		   Margin="0,0,20,0">

					<!-- Botón Volver al Menú -->
					<Button Name="BackButton"
		   Click="BackButton_Click"
		   Style="{StaticResource ModernButton}"
		   Background="#37474F"
		   Width="120"
		   Height="40"
		   Margin="10,0">
						<StackPanel Orientation="Horizontal">
							<TextBlock Text="← " FontSize="16" Margin="0,0,5,0"/>
							<TextBlock Text="VOLVER" FontSize="14" FontWeight="SemiBold"/>
						</StackPanel>
					</Button>
				</StackPanel>


			</Grid>
		</Border>

		<!-- Resumen de totales -->
		<Border Grid.Row="1" Background="#FAFAFA" BorderBrush="#E0E0E0" BorderThickness="0,0,0,1">
			<Grid Margin="25,15">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="*"/>
				</Grid.ColumnDefinitions>

				<!-- Total General -->
				<Border Grid.Column="0" Margin="0,0,10,0">
					<StackPanel>
						<TextBlock Text="TOTAL GENERAL"
						 FontSize="11"
						 FontWeight="SemiBold"
						 Foreground="#666"
						 Margin="0,0,0,5"/>
						<TextBlock Name="TotalGeneralText"
						 Text="$0.00"
						 FontSize="24"
						 FontWeight="Bold"
						 Foreground="#263238"/>
					</StackPanel>
				</Border>

				<!-- Total Pendiente -->
				<Border Grid.Column="1" Margin="10,0">
					<StackPanel>
						<TextBlock Text="PENDIENTE DE PAGO"
						 FontSize="11"
						 FontWeight="SemiBold"
						 Foreground="#666"
						 Margin="0,0,0,5"/>
						<TextBlock Name="TotalPendienteText"
						 Text="$0.00"
						 FontSize="24"
						 FontWeight="Bold"
						 Foreground="#FF9800"/>
					</StackPanel>
				</Border>

				<!-- Total Pagado -->
				<Border Grid.Column="2" Margin="10,0,0,0">
					<StackPanel>
						<TextBlock Text="PAGADO"
						 FontSize="11"
						 FontWeight="SemiBold"
						 Foreground="#666"
						 Margin="0,0,0,5"/>
						<TextBlock Name="TotalPagadoText"
						 Text="$0.00"
						 FontSize="24"
						 FontWeight="Bold"
						 Foreground="#4CAF50"/>
					</StackPanel>
				</Border>
			</Grid>
		</Border>

		<!-- Toolbar con filtros y botones -->
		<Border Grid.Row="2" Background="White" Padding="20,15">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>

				<!-- Filtros izquierda -->
				<!-- Filtros izquierda -->
				<StackPanel Grid.Column="0" Orientation="Horizontal">
					<!-- Búsqueda -->
					<Border Background="#F5F5F5"
		   CornerRadius="5"
		   Margin="0,0,10,0"
		   Width="250">
						<Grid>
							<TextBox Name="SearchBox"
				   BorderThickness="0"
				   Background="Transparent"
				   Padding="35,8,10,8"
				   FontSize="14"
				   TextChanged="SearchBox_TextChanged"
				   VerticalAlignment="Center"/>
							<TextBlock Text="🔍"
					 HorizontalAlignment="Left"
					 VerticalAlignment="Center"
					 Margin="10,0,0,0"
					 Foreground="#666"
					 IsHitTestVisible="False"/>
							<TextBlock Text="Buscar por descripción..."
					 HorizontalAlignment="Left"
					 VerticalAlignment="Center"
					 Margin="35,0,0,0"
					 Foreground="#999"
					 IsHitTestVisible="False">
								<TextBlock.Style>
									<Style TargetType="TextBlock">
										<Setter Property="Visibility" Value="Collapsed"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding Text, ElementName=SearchBox}" Value="">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</TextBlock.Style>
							</TextBlock>
						</Grid>
					</Border>

					<!-- Filtro Proveedor -->
					<ComboBox Name="SupplierFilterCombo"
			Width="200"
			Height="38"
			Margin="0,0,10,0"
			FontSize="14"
			SelectionChanged="SupplierFilterCombo_SelectionChanged">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<!-- Filtro Orden - NUEVO -->
					<ComboBox Name="OrderFilterCombo"
			Width="180"
			Height="38"
			Margin="0,0,10,0"
			FontSize="14"
			SelectionChanged="OrderFilterCombo_SelectionChanged">
						<ComboBox.ItemTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding Display}" />
							</DataTemplate>
						</ComboBox.ItemTemplate>
					</ComboBox>

					<!-- Filtro Estado (sin VENCIDO) -->
					<ComboBox Name="StatusFilterCombo"
			Width="150"
			Height="38"
			Margin="0,0,10,0"
			FontSize="14"
			SelectionChanged="StatusFilterCombo_SelectionChanged">
						<ComboBoxItem>Todos</ComboBoxItem>
						<ComboBoxItem IsSelected="True">PENDIENTE</ComboBoxItem>
						<ComboBoxItem>PAGADO</ComboBoxItem>
					</ComboBox>

					<!-- Botón limpiar filtros -->
					<Button Name="ClearFiltersButton"
		   Content="🔄 Limpiar"
		   Style="{StaticResource SecondaryButton}"
		   Margin="15,0,0,0"
		   Width="100"
		   Click="ClearFiltersButton_Click"/>
				</StackPanel>

				<!-- Botones derecha -->
				<StackPanel Grid.Column="1" Orientation="Horizontal">
					<Button Name="RefreshButton"
						   Content="🔄"
						   Style="{StaticResource SecondaryButton}"
						   Width="120"
						   Margin="0,0,10,0"
						   ToolTip="Actualizar"
						   Click="RefreshButton_Click"
						   
							/>

					

					<Button Name="NewExpenseButton"
						   Content="➕ NUEVO GASTO"
						   Style="{StaticResource ModernButton}"
						   Width="150"
						   Click="NewExpenseButton_Click"/>
				</StackPanel>
			</Grid>
		</Border>

		<!-- DataGrid principal con edición inline -->
		<Border Grid.Row="3" Background="White" Margin="20,0,20,20">
			<DataGrid Name="ExpensesDataGrid"
					AutoGenerateColumns="False"
					CanUserAddRows="False"
					CanUserDeleteRows="False"
					GridLinesVisibility="Horizontal"
					BorderThickness="1"
					BorderBrush="#E0E0E0"
					HeadersVisibility="Column"
					FontSize="13"
					RowHeight="45"
					AlternatingRowBackground="#FAFAFA"
					SelectionMode="Single"
					RowStyle="{StaticResource NewRowStyle}"
					SelectionChanged="ExpensesDataGrid_SelectionChanged">

				<DataGrid.Resources>
					<!-- Estilo mejorado para filas pendientes -->
					<Style TargetType="DataGridRow">
						<Style.Triggers>
							<!-- Fila nueva en edición -->
							<DataTrigger Binding="{Binding IsNew}" Value="True">
								<Setter Property="Background" Value="#E8F5E9"/>
								<Setter Property="BorderBrush" Value="#4CAF50"/>
								<Setter Property="BorderThickness" Value="2"/>
							</DataTrigger>

							<!-- PENDIENTE - Resaltado sutil -->
							<MultiDataTrigger>
								<MultiDataTrigger.Conditions>
									<Condition Binding="{Binding Status}" Value="PENDIENTE"/>
									<Condition Binding="{Binding IsNew}" Value="False"/>
								</MultiDataTrigger.Conditions>
								<Setter Property="Background">
									<Setter.Value>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
											<GradientStop Color="#FFF8E1" Offset="0"/>
											<GradientStop Color="#FFFEF7" Offset="1"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
								<Setter Property="BorderBrush" Value="#FFB300"/>
								<Setter Property="BorderThickness" Value="0,0,0,2"/>
							</MultiDataTrigger>

							<!-- VENCIDO - Resaltado urgente -->
							<DataTrigger Binding="{Binding IsOverdue}" Value="True">
								<Setter Property="Background">
									<Setter.Value>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
											<GradientStop Color="#FFEBEE" Offset="0"/>
											<GradientStop Color="#FFF5F5" Offset="1"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
								<Setter Property="BorderBrush" Value="#F44336"/>
								<Setter Property="BorderThickness" Value="0,0,0,3"/>
								<Setter Property="FontWeight" Value="SemiBold"/>
							</DataTrigger>

							<!-- Hover mejorado -->
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" Value="#E3F2FD"/>
								<Setter Property="Cursor" Value="Hand"/>
							</Trigger>

							<!-- Seleccionado -->
							<Trigger Property="IsSelected" Value="True">
								<Setter Property="Background" Value="#BBDEFB"/>
							</Trigger>
						</Style.Triggers>
					</Style>
				</DataGrid.Resources>

				<DataGrid.Columns>
					<!-- Proveedor - ComboBox para filas nuevas, solo lectura para existentes -->
					<DataGridTemplateColumn Header="PROVEEDOR" Width="200">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding SupplierName}"
										 VerticalAlignment="Center"
										 Padding="5,0"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
						<DataGridTemplateColumn.CellEditingTemplate>
							<DataTemplate>
								<ComboBox Name="SupplierCombo"
										SelectedValue="{Binding SupplierId, UpdateSourceTrigger=PropertyChanged}"
										SelectedValuePath="Id"
										DisplayMemberPath="SupplierName"
										Loaded="SupplierCombo_Loaded"
										SelectionChanged="SupplierCombo_SelectionChanged"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellEditingTemplate>
					</DataGridTemplateColumn>

					<!-- Descripción - EDITABLE -->
					<DataGridTextColumn Header="DESCRIPCIÓN" 
									  Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}"
									  Width="*">
						<DataGridTextColumn.ElementStyle>
							<Style TargetType="TextBlock">
								<Setter Property="VerticalAlignment" Value="Center"/>
								<Setter Property="Padding" Value="5,0"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsNew}" Value="True">
										<Setter Property="Background" Value="#E8F5E9"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</DataGridTextColumn.ElementStyle>
						<DataGridTextColumn.EditingElementStyle>
							<Style TargetType="TextBox">
								<Setter Property="VerticalAlignment" Value="Center"/>
								<Setter Property="Padding" Value="5,2"/>
							</Style>
						</DataGridTextColumn.EditingElementStyle>
					</DataGridTextColumn>


					<!-- Orden - ComboBox para filas nuevas -->
					<DataGridTemplateColumn Header="ORDEN" Width="150">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding OrderNumber}"
					 VerticalAlignment="Center"
					 HorizontalAlignment="Center"
					 Padding="5,0"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
						<DataGridTemplateColumn.CellEditingTemplate>
							<DataTemplate>
								<ComboBox SelectedValue="{Binding OrderId, UpdateSourceTrigger=PropertyChanged}"
					Loaded="OrderCombo_Loaded"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellEditingTemplate>
					</DataGridTemplateColumn>

					<!-- Fecha Compra - EDITABLE -->
					<DataGridTemplateColumn Header="F. COMPRA" Width="100">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ExpenseDateDisplay}"
										 HorizontalAlignment="Center"
										 VerticalAlignment="Center"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
						<DataGridTemplateColumn.CellEditingTemplate>
							<DataTemplate>
								<DatePicker SelectedDate="{Binding ExpenseDate, UpdateSourceTrigger=PropertyChanged}"
										  VerticalAlignment="Center"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellEditingTemplate>
					</DataGridTemplateColumn>

					<!-- Total - EDITABLE -->
					<DataGridTemplateColumn Header="TOTAL" Width="120">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding TotalExpenseDisplay}"
										 FontWeight="SemiBold"
										 HorizontalAlignment="Right"
										 VerticalAlignment="Center"
										 Margin="0,0,10,0">
									<TextBlock.Style>
										<Style TargetType="TextBlock">
											<Style.Triggers>
												<DataTrigger Binding="{Binding IsNew}" Value="True">
													<Setter Property="Foreground" Value="#4CAF50"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</TextBlock.Style>
								</TextBlock>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
						<DataGridTemplateColumn.CellEditingTemplate>
							<DataTemplate>
								<TextBox Text="{Binding TotalExpense, UpdateSourceTrigger=PropertyChanged, StringFormat=F2}"
									   HorizontalAlignment="Stretch"
									   VerticalAlignment="Center"
									   TextAlignment="Right"
									   Padding="5,2"
									   PreviewTextInput="TotalAmount_PreviewTextInput"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellEditingTemplate>
					</DataGridTemplateColumn>

					<!-- Fecha Programada - Solo lectura -->
					<DataGridTemplateColumn Header="F. PROG." Width="100" IsReadOnly="True">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding ScheduledDateDisplay}"
										 HorizontalAlignment="Center"
										 VerticalAlignment="Center">
									<TextBlock.Style>
										<Style TargetType="TextBlock">
											<Style.Triggers>
												<DataTrigger Binding="{Binding IsOverdue}" Value="True">
													<Setter Property="Foreground" Value="#F44336"/>
													<Setter Property="FontWeight" Value="Bold"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</TextBlock.Style>
								</TextBlock>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>

					<!-- Estado - Solo lectura -->
					<DataGridTemplateColumn Header="ESTADO" Width="100" IsReadOnly="True">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<Border CornerRadius="12"
									   HorizontalAlignment="Center"
									   VerticalAlignment="Center"
									   Padding="10,4">
									<Border.Style>
										<Style TargetType="Border">
											<Style.Triggers>
												<DataTrigger Binding="{Binding Status}" Value="PAGADO">
													<Setter Property="Background" Value="#E8F5E9"/>
												</DataTrigger>
												<DataTrigger Binding="{Binding Status}" Value="PENDIENTE">
													<Setter Property="Background" Value="#FFF3E0"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Border.Style>
									<TextBlock Text="{Binding Status}"
											 FontSize="11"
											 FontWeight="SemiBold">
										<TextBlock.Style>
											<Style TargetType="TextBlock">
												<Style.Triggers>
													<DataTrigger Binding="{Binding Status}" Value="PAGADO">
														<Setter Property="Foreground" Value="#2E7D32"/>
													</DataTrigger>
													<DataTrigger Binding="{Binding Status}" Value="PENDIENTE">
														<Setter Property="Foreground" Value="#E65100"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</Border>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>

					<!-- Fecha Pago - EDITABLE siempre que no esté pagado -->
					<DataGridTemplateColumn Header="F. PAGO" Width="100">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<TextBlock Text="{Binding PaidDateDisplay}"
					 HorizontalAlignment="Center"
					 VerticalAlignment="Center">
									<TextBlock.Style>
										<Style TargetType="TextBlock">
											<Style.Triggers>
												<!-- Si no está pagado, mostrar cursor de mano -->
												<DataTrigger Binding="{Binding IsPaid}" Value="False">
													<Setter Property="Cursor" Value="Hand"/>
													<Setter Property="ToolTip" Value="Clic para registrar pago"/>
													<Setter Property="Foreground" Value="#999"/>
													<Setter Property="FontStyle" Value="Italic"/>
												</DataTrigger>
												<!-- Si está pagado, permitir edición también -->
												<DataTrigger Binding="{Binding IsPaid}" Value="True">
													<Setter Property="Cursor" Value="Hand"/>
													<Setter Property="ToolTip" Value="Clic para modificar fecha de pago"/>
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</TextBlock.Style>
								</TextBlock>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
						<DataGridTemplateColumn.CellEditingTemplate>
							<DataTemplate>
								<DatePicker SelectedDate="{Binding PaidDate, UpdateSourceTrigger=PropertyChanged}"
					  Width="95"
					  SelectedDateChanged="PaidDatePicker_Changed"/>
							</DataTemplate>
						</DataGridTemplateColumn.CellEditingTemplate>
					</DataGridTemplateColumn>

					<!-- Método Pago - EDITABLE -->
                    <!-- Método Pago - EDITABLE -->
                    <DataGridTemplateColumn Header="MÉTODO" Width="120">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding PayMethod}"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsPaid}" Value="True">
                                                    <Setter Property="Cursor" Value="Hand"/>
                                                    <Setter Property="ToolTip" Value="Clic para cambiar método"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                        <DataGridTemplateColumn.CellEditingTemplate>
                            <DataTemplate>
                                <ComboBox SelectedItem="{Binding PayMethod, UpdateSourceTrigger=PropertyChanged}"
                    Width="110"
                    SelectionChanged="PayMethodCombo_Changed">
                                    <ComboBox.Items>
                                        <system:String>TRANSFERENCIA</system:String>
                                        <system:String>EFECTIVO</system:String>
                                        <system:String>CHEQUE</system:String>
                                        <system:String>CRÉDITO</system:String>
                                        <system:String>DÉBITO</system:String>
                                    </ComboBox.Items>
                                </ComboBox>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellEditingTemplate>
                    </DataGridTemplateColumn>
                    <!-- Acciones -->
					<DataGridTemplateColumn Header="ACCIONES" Width="150">
						<DataGridTemplateColumn.CellTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
									<!-- Botón Guardar (solo para filas nuevas) -->
									<Button Content="💾"
										   Tag="{Binding}"
										   Click="SaveNewButton_Click"
										   Width="35"
										   Height="30"
										   Margin="2,0"
										   ToolTip="Guardar nuevo gasto">
										<Button.Style>
											<Style TargetType="Button" BasedOn="{StaticResource SuccessButton}">
												<Setter Property="Visibility" Value="Collapsed"/>
												<Style.Triggers>
													<DataTrigger Binding="{Binding IsNew}" Value="True">
														<Setter Property="Visibility" Value="Visible"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>

									<!-- Botón Pagar (solo si está pendiente y no es nuevo) -->
									<Button Content="💵"
										Tag="{Binding}"
										Click="PayButton_Click"
										ToolTip="Registrar Pago">
										<Button.Style>
											<Style TargetType="Button" BasedOn="{StaticResource SuccessButton}">
												<Setter Property="Width" Value="35"/>
												<Setter Property="Height" Value="30"/>
												<Setter Property="Margin" Value="2,0"/>
												<Setter Property="Visibility" Value="Collapsed"/>
												<Style.Triggers>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{Binding IsPaid}" Value="False"/>
															<Condition Binding="{Binding IsNew}" Value="False"/>
														</MultiDataTrigger.Conditions>
														<Setter Property="Visibility" Value="Visible"/>
													</MultiDataTrigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>

									<!-- Botón Editar (solo para filas guardadas) -->
									<Button Content="✏️"
										Tag="{Binding}"
										Click="EditButton_Click"
										ToolTip="Editar completo">
										<Button.Style>
											<Style TargetType="Button" BasedOn="{StaticResource SecondaryButton}">
												<Setter Property="Width" Value="35"/>
												<Setter Property="Height" Value="30"/>
												<Setter Property="Margin" Value="2,0"/>
												<Setter Property="Visibility" Value="Visible"/>
												<Style.Triggers>
													<DataTrigger Binding="{Binding IsNew}" Value="True">
														<Setter Property="Visibility" Value="Collapsed"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Button.Style>
									</Button>

									<!-- Botón Eliminar/Cancelar -->
									<Button Content="🗑️"
										   Tag="{Binding}"
										   Click="DeleteButton_Click"
										   Style="{StaticResource DangerButton}"
										   Width="35"
										   Height="30"
										   Margin="2,0">
										<Button.ToolTip>
											<ToolTip>
												<ToolTip.Style>
													<Style TargetType="ToolTip">
														<Style.Triggers>
															<DataTrigger Binding="{Binding IsNew}" Value="True">
																<Setter Property="Content" Value="Cancelar"/>
															</DataTrigger>
															<DataTrigger Binding="{Binding IsNew}" Value="False">
																<Setter Property="Content" Value="Eliminar"/>
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</ToolTip.Style>
											</ToolTip>
										</Button.ToolTip>
									</Button>
								</StackPanel>
							</DataTemplate>
						</DataGridTemplateColumn.CellTemplate>
					</DataGridTemplateColumn>
				</DataGrid.Columns>
			</DataGrid>
		</Border>

		<!-- Status Bar -->
		<Border Grid.Row="4">
			<Border.Background>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Color="#37474F" Offset="0"/>
					<GradientStop Color="#263238" Offset="1"/>
				</LinearGradientBrush>
			</Border.Background>

			<Grid Margin="25,15">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*"/>
					<ColumnDefinition Width="Auto"/>
					<ColumnDefinition Width="Auto"/>
				</Grid.ColumnDefinitions>

				<!-- Mensaje de estado -->
				<StackPanel Grid.Column="0" Orientation="Horizontal">
					<TextBlock Text="Estado: "
							 Foreground="#B0BEC5"
							 FontSize="12"/>
					<TextBlock Name="StatusText"
							 Text="Listo"
							 Foreground="#4CAF50"
							 FontWeight="SemiBold"
							 FontSize="12"
							 Margin="0,0,20,0"/>

					<TextBlock Name="RecordCountText"
							 Text="0 registros"
							 Foreground="#B0BEC5"
							 FontSize="12"/>
				</StackPanel>

				<!-- Usuario actual -->
				<TextBlock Grid.Column="1"
						 Name="CurrentUserText"
						 Text="Usuario: "
						 Foreground="#B0BEC5"
						 FontSize="12"
						 Margin="0,0,20,0"/>

				<!-- Timestamp -->
				<TextBlock Grid.Column="2"
						 Name="LastUpdateText"
						 Text="Última actualización: --"
						 Foreground="#607D8B"
						 FontSize="11"/>
			</Grid>
		</Border>
	</Grid>
</Window>